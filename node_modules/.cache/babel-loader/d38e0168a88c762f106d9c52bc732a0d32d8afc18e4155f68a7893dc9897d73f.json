{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/(utils)/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchData } from \"../../utils/utils\";\nimport { setSearchedMovie } from \"../../slices/MovieSlice\";\nimport { setSearchedShow } from \"../../slices/TvShowSlice\";\nimport { setSearchedActor } from \"../../slices/ActorSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  // const [movieResult, setMovieResult] = useState([]);\n  // const [seriesResult, setSeriesResult] = useState([]);\n  // const [actorsResult, setActorsResult] = useState([]);\n\n  const handlerSearch = async e => {\n    if (e.key === \"Enter\") {\n      const res = fetchData(`search/movie?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/tv?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/person?query=${search}&include_adult=false&language=en-US&page=1`);\n      setSearchedMovie(res);\n      setSearchedShow(res);\n      setSearchedActor(res);\n    } else {\n      const res = fetchData(`search/movie?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/tv?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/person?query=${search}&include_adult=false&language=en-US&page=1`);\n      setSearchedMovie(res);\n      setSearchedShow(res);\n      setSearchedActor(res);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"h-8 flex items-center  text-start p-2 text-black font-serif text-sm rounded-xl\",\n        type: \"search\",\n        size: \"50\",\n        placeholder: \"Search Movie / Tv Show / Actors \",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyDown: handlerSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-black font-bold p-2 bg-yellow-500  rounded-xl\",\n        onClick: handlerSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","fetchData","setSearchedMovie","setSearchedShow","setSearchedActor","jsxDEV","_jsxDEV","SearchBar","_s","search","setSearch","handlerSearch","e","key","res","children","className","type","size","placeholder","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/(utils)/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchData } from \"../../utils/utils\";\nimport { setSearchedMovie } from \"../../slices/MovieSlice\";\nimport { setSearchedShow } from \"../../slices/TvShowSlice\";\nimport { setSearchedActor } from \"../../slices/ActorSlice\";\n\nconst SearchBar = () => {\n  const [search, setSearch] = useState(\"\");\n  // const [movieResult, setMovieResult] = useState([]);\n  // const [seriesResult, setSeriesResult] = useState([]);\n  // const [actorsResult, setActorsResult] = useState([]);\n\n  const handlerSearch = async (e) => {\n    if (e.key === \"Enter\") {\n      const res = fetchData(\n        `search/movie?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/tv?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/person?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      setSearchedMovie(res);\n      setSearchedShow(res);\n      setSearchedActor(res);\n    } else {\n      const res = fetchData(\n        `search/movie?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/tv?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/person?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      setSearchedMovie(res);\n      setSearchedShow(res);\n      setSearchedActor(res);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex flex-row\">\n        <input\n          className=\"h-8 flex items-center  text-start p-2 text-black font-serif text-sm rounded-xl\"\n          type=\"search\"\n          size=\"50\"\n          placeholder=\"Search Movie / Tv Show / Actors \"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handlerSearch}\n        />\n\n        <button\n          className=\"text-black font-bold p-2 bg-yellow-500  rounded-xl\"\n          onClick={handlerSearch}\n        >\n          Search\n        </button>\n      </div>\n      {/* <div>\n        <div className=\"flex flex-row\">\n          <img\n            src={`https://image.tmdb.org/t/p/original${movieResult.poster_path}`}\n            alt={movieResult.title}\n          />\n          <span>{movieResult.title}</span>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,gBAAgB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA;EACA;;EAEA,MAAMW,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjC,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrB,MAAMC,GAAG,GAAGb,SAAS,CAClB,sBAAqBQ,MAAO,4CAC/B,CAAC;MACDR,SAAS,CACN,mBAAkBQ,MAAO,4CAC5B,CAAC;MACDR,SAAS,CACN,uBAAsBQ,MAAO,4CAChC,CAAC;MACDP,gBAAgB,CAACY,GAAG,CAAC;MACrBX,eAAe,CAACW,GAAG,CAAC;MACpBV,gBAAgB,CAACU,GAAG,CAAC;IACvB,CAAC,MAAM;MACL,MAAMA,GAAG,GAAGb,SAAS,CAClB,sBAAqBQ,MAAO,4CAC/B,CAAC;MACDR,SAAS,CACN,mBAAkBQ,MAAO,4CAC5B,CAAC;MACDR,SAAS,CACN,uBAAsBQ,MAAO,4CAChC,CAAC;MACDP,gBAAgB,CAACY,GAAG,CAAC;MACrBX,eAAe,CAACW,GAAG,CAAC;MACpBV,gBAAgB,CAACU,GAAG,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BT,OAAA;QACEU,SAAS,EAAC,gFAAgF;QAC1FC,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,IAAI;QACTC,WAAW,EAAC,kCAAkC;QAC9CC,KAAK,EAAEX,MAAO;QACdY,QAAQ,EAAGT,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAC3CG,SAAS,EAAEZ;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eAEFrB,OAAA;QACEU,SAAS,EAAC,oDAAoD;QAC9DY,OAAO,EAAEjB,aAAc;QAAAI,QAAA,EACxB;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnEID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAqEf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}