{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/cast/CastPeople.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { setTvCast } from \"../../../slices/TvShowSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CastPeople = () => {\n  _s();\n  var _fullCastPeople$cast;\n  const fullCastPeople = useSelector(state => state.series.tvActors.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: fullCastPeople && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-5 \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-3 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold underline text-xl italic font-serif\",\n          children: \"Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: (_fullCastPeople$cast = fullCastPeople.cast) === null || _fullCastPeople$cast === void 0 ? void 0 : _fullCastPeople$cast.map((item, index) => {\n            var _item$roles;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.profile_path ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://image.tmdb.org/t/p/original${item.profile_path}`,\n                  alt: item.name,\n                  className: \"w-[100px] h-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold text-xl\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 27\n                  }, this), item.roles && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: (_item$roles = item.roles) === null || _item$roles === void 0 ? void 0 : _item$roles.map((role, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex flex-col\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-lg text-gray-300 italic\",\n                          children: \"as\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 35,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-lg text-gray-300 italic\",\n                          children: role.character\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 38,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm text-gray-500 \",\n                          children: [\"(\", role.episode_count, \" Episodes)\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 41,\n                          columnNumber: 37\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 34,\n                        columnNumber: 35\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(CastPeople, \"ZN/XhetcXVxvXLuONEcrZ3QFtKU=\", false, function () {\n  return [useSelector];\n});\n_c = CastPeople;\nexport default CastPeople;\nvar _c;\n$RefreshReg$(_c, \"CastPeople\");","map":{"version":3,"names":["React","useSelector","setTvCast","jsxDEV","_jsxDEV","Fragment","_Fragment","CastPeople","_s","_fullCastPeople$cast","fullCastPeople","state","series","tvActors","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","cast","map","item","index","_item$roles","profile_path","src","alt","name","roles","role","character","episode_count","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/cast/CastPeople.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { setTvCast } from \"../../../slices/TvShowSlice\";\n\nconst CastPeople = () => {\n  const fullCastPeople = useSelector((state) => state.series.tvActors.data);\n\n  return (\n    <div>\n      {fullCastPeople && (\n        <div className=\"grid grid-cols-2 gap-5 \">\n          <div className=\"flex flex-col gap-3 items-center\">\n            <span className=\"font-bold underline text-xl italic font-serif\">\n              Cast\n            </span>\n            <div className=\"flex flex-col gap-2\">\n              {fullCastPeople.cast?.map((item, index) => {\n                return (\n                  <div key={index}>\n                    {item.profile_path ? (\n                      <div className=\"flex flex-row gap-2\">\n                        <img\n                          src={`https://image.tmdb.org/t/p/original${item.profile_path}`}\n                          alt={item.name}\n                          className=\"w-[100px] h-auto\"\n                        />\n\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-bold text-xl\">{item.name}</span>\n                          {item.roles && (\n                            <div>\n                              {item.roles?.map((role, index) => {\n                                return (\n                                  <div key={index} className=\"flex flex-col\">\n                                    <span className=\"text-lg text-gray-300 italic\">\n                                      as\n                                    </span>\n                                    <span className=\"text-lg text-gray-300 italic\">\n                                      {role.character}\n                                    </span>\n                                    <span className=\"text-sm text-gray-500 \">\n                                      ({role.episode_count} Episodes)\n                                    </span>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CastPeople;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}