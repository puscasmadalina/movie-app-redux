{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/(utils)/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchData } from \"../../utils/utils\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [search, setSearch] = useState(\"\");\n  const [movieResult, setMovieResult] = useState([]);\n  const [seriesResult, setSeriesResult] = useState([]);\n  const [actorsResult, setActorsResult] = useState([]);\n  const handlerSearch = async e => {\n    if (e.key === \"Enter\") {\n      const res = fetchData(`search/movie?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/tv?query=${search}&include_adult=false&language=en-US&page=1`);\n      fetchData(`search/person?query=${search}&include_adult=false&language=en-US&page=1`);\n      setMovieResult(res);\n      setSeriesResult(res);\n      setActorsResult(res);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"h-8 flex items-center  text-start p-2 text-black font-serif text-sm rounded-xl\",\n        type: \"search\",\n        size: \"50\",\n        placeholder: \"Search Movie / Tv Show / Actors \",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyDown: handlerSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-black font-bold p-2 bg-yellow-500  rounded-xl\",\n        onClick: handlerSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `movie/${id}`,\n        className: \"flex flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/original${movieResult.poster_path}`,\n          alt: movieResult.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieResult.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"SEsFOT+oXEEitqg1pRlFkUsUaB8=\", false, function () {\n  return [useParams];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","fetchData","Link","useParams","jsxDEV","_jsxDEV","SearchBar","_s","id","search","setSearch","movieResult","setMovieResult","seriesResult","setSeriesResult","actorsResult","setActorsResult","handlerSearch","e","key","res","children","className","type","size","placeholder","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","src","poster_path","alt","title","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/(utils)/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchData } from \"../../utils/utils\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst SearchBar = () => {\n  const { id } = useParams();\n  const [search, setSearch] = useState(\"\");\n  const [movieResult, setMovieResult] = useState([]);\n  const [seriesResult, setSeriesResult] = useState([]);\n  const [actorsResult, setActorsResult] = useState([]);\n\n  const handlerSearch = async (e) => {\n    if (e.key === \"Enter\") {\n      const res = fetchData(\n        `search/movie?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/tv?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      fetchData(\n        `search/person?query=${search}&include_adult=false&language=en-US&page=1`\n      );\n      setMovieResult(res);\n      setSeriesResult(res);\n      setActorsResult(res);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex flex-row\">\n        <input\n          className=\"h-8 flex items-center  text-start p-2 text-black font-serif text-sm rounded-xl\"\n          type=\"search\"\n          size=\"50\"\n          placeholder=\"Search Movie / Tv Show / Actors \"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handlerSearch}\n        />\n\n        <button\n          className=\"text-black font-bold p-2 bg-yellow-500  rounded-xl\"\n          onClick={handlerSearch}\n        >\n          Search\n        </button>\n      </div>\n      <div>\n        <Link to={`movie/${id}`} className=\"flex flex-row\">\n          <img\n            src={`https://image.tmdb.org/t/p/original${movieResult.poster_path}`}\n            alt={movieResult.title}\n          />\n          <span>{movieResult.title}</span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}