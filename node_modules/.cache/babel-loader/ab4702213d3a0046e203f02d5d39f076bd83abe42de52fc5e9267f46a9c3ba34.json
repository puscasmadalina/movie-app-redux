{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/Keywords.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { setTvKeyword } from \"../../slices/TvShowSlice\";\nimport { fetchDetails } from \"../../utils/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Keywords = () => {\n  _s();\n  var _tvKeywords$keywords;\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const result = await fetchDetails(`tv/${id}/keywords`);\n      dispatch(setTvKeyword(result));\n    }\n    fetchDataFunction();\n  }, [id]);\n  const tvKeywords = useSelector(state => state.series.tvKeyword.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-start gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-serif text-xl italic\",\n        children: \"Keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), tvKeywords && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 items-start gap-2\",\n        children: (_tvKeywords$keywords = tvKeywords.keywords) === null || _tvKeywords$keywords === void 0 ? void 0 : _tvKeywords$keywords.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"flex items-center pr-5\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"border rounded-xl p-1 text-sm\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Keywords, \"7F13gwuM0KkVoHIqsZMgCmnzIos=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = Keywords;\nexport default Keywords;\nvar _c;\n$RefreshReg$(_c, \"Keywords\");","map":{"version":3,"names":["React","useEffect","setTvKeyword","fetchDetails","useDispatch","useSelector","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Keywords","_s","_tvKeywords$keywords","dispatch","id","fetchDataFunction","result","tvKeywords","state","series","tvKeyword","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","keywords","map","item","index","name","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/Keywords.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { setTvKeyword } from \"../../slices/TvShowSlice\";\nimport { fetchDetails } from \"../../utils/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst Keywords = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const result = await fetchDetails(`tv/${id}/keywords`);\n      dispatch(setTvKeyword(result));\n    }\n\n    fetchDataFunction();\n  }, [id]);\n\n  const tvKeywords = useSelector((state) => state.series.tvKeyword.data);\n\n  return (\n    <>\n      <div className=\"flex flex-col items-start gap-3\">\n        <span className=\"font-serif text-xl italic\">Keywords</span>\n        {tvKeywords && (\n          <div className=\"grid grid-cols-4 items-start gap-2\">\n            {tvKeywords.keywords?.map((item, index) => {\n              return (\n                <ul key={index} className=\"flex items-center pr-5\">\n                  <li className=\"border rounded-xl p-1 text-sm\">{item.name}</li>\n                </ul>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Keywords;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EACrB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1BL,SAAS,CAAC,MAAM;IACd,eAAee,iBAAiBA,CAAA,EAAG;MACjC,MAAMC,MAAM,GAAG,MAAMd,YAAY,CAAE,MAAKY,EAAG,WAAU,CAAC;MACtDD,QAAQ,CAACZ,YAAY,CAACe,MAAM,CAAC,CAAC;IAChC;IAEAD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,MAAMG,UAAU,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,IAAI,CAAC;EAEtE,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,iCAAiC;MAAAD,QAAA,gBAC9Cf,OAAA;QAAMgB,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC1DV,UAAU,iBACTV,OAAA;QAAKgB,SAAS,EAAC,oCAAoC;QAAAD,QAAA,GAAAV,oBAAA,GAChDK,UAAU,CAACW,QAAQ,cAAAhB,oBAAA,uBAAnBA,oBAAA,CAAqBiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACzC,oBACExB,OAAA;YAAgBgB,SAAS,EAAC,wBAAwB;YAAAD,QAAA,eAChDf,OAAA;cAAIgB,SAAS,EAAC,+BAA+B;cAAAD,QAAA,EAAEQ,IAAI,CAACE;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC,GADvDI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP,CAAC;AAAChB,EAAA,CAhCID,QAAQ;EAAA,QACKP,WAAW,EACbE,SAAS,EAULD,WAAW;AAAA;AAAA6B,EAAA,GAZ1BvB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}