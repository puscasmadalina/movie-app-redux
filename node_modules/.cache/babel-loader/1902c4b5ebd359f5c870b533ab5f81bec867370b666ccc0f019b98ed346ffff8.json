{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/TvCast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDetails } from \"../../utils/utils\";\nimport { setTvCast } from \"../../slices/TvShowSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css/scrollbar\";\nimport { Mousewheel, Pagination, Scrollbar } from \"swiper/modules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cast = () => {\n  _s();\n  var _tvCast$cast;\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const res = await fetchDetails(`/tv/${id}/aggregate_credits?language=en-US`);\n      dispatch(setTvCast(res));\n    }\n    fetchDataFunction();\n  }, [id]);\n  const tvCast = useSelector(state => state.series.tvActors.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tvCast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-yellow-500 p-1 text-black text-2xl font-bold font-serif rounded-xl\",\n        children: \"Series Top Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n        direction: \"horizontal\",\n        slidesPerView: 6,\n        spaceBetween: 0,\n        mousewheel: true,\n        modules: [Mousewheel, Pagination, Scrollbar],\n        className: \"mt-5\",\n        children: (_tvCast$cast = tvCast.cast) === null || _tvCast$cast === void 0 ? void 0 : _tvCast$cast.slice(0, 9).map((item, index) => {\n          var _item$roles;\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            className: \"h-[320px] p-1\",\n            children: [item.profile_path ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-[60%]\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/original${item.profile_path}`,\n                alt: item.name,\n                className: \"rounded-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col gap-2 mt-2 h-[40%]\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"font-bold\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), item.roles && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: (_item$roles = item.roles) === null || _item$roles === void 0 ? void 0 : _item$roles.map((role, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \" text-gray-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: role.character\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [role.episode_count, \" Episodes\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Cast, \"b2qD3jOWAFEgsH07GYopbo+Jp+c=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = Cast;\nexport default Cast;\nvar _c;\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchDetails","setTvCast","useParams","Swiper","SwiperSlide","Mousewheel","Pagination","Scrollbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Cast","_s","_tvCast$cast","dispatch","id","fetchDataFunction","res","tvCast","state","series","tvActors","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","direction","slidesPerView","spaceBetween","mousewheel","modules","cast","slice","map","item","index","_item$roles","profile_path","src","alt","name","roles","role","character","episode_count","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/TvCast.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDetails } from \"../../utils/utils\";\nimport { setTvCast } from \"../../slices/TvShowSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css/scrollbar\";\nimport { Mousewheel, Pagination, Scrollbar } from \"swiper/modules\";\n\nconst Cast = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const res = await fetchDetails(\n        `/tv/${id}/aggregate_credits?language=en-US`\n      );\n      dispatch(setTvCast(res));\n    }\n\n    fetchDataFunction();\n  }, [id]);\n\n  const tvCast = useSelector((state) => state.series.tvActors.data);\n\n  return (\n    <>\n      {tvCast && (\n        <div>\n          <span className=\"bg-yellow-500 p-1 text-black text-2xl font-bold font-serif rounded-xl\">\n            Series Top Cast\n          </span>\n          <Swiper\n            direction={\"horizontal\"}\n            slidesPerView={6}\n            spaceBetween={0}\n            mousewheel={true}\n            modules={[Mousewheel, Pagination, Scrollbar]}\n            className=\"mt-5\"\n          >\n            {tvCast.cast?.slice(0, 9).map((item, index) => {\n              return (\n                <SwiperSlide className=\"h-[320px] p-1\" key={index}>\n                  {item.profile_path ? (\n                    <div className=\"h-[60%]\">\n                      <img\n                        src={`https://image.tmdb.org/t/p/original${item.profile_path}`}\n                        alt={item.name}\n                        className=\"rounded-xl\"\n                      />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                  <div className=\"flex flex-col gap-2 mt-2 h-[40%]\">\n                    <h2 className=\"font-bold\">{item.name}</h2>\n                    {item.roles && (\n                      <>\n                        {item.roles?.map((role, index) => {\n                          return (\n                            <div className=\" text-gray-500\" key={index}>\n                              <h4>{role.character}</h4>\n                              <h4>{role.episode_count} Episodes</h4>\n                            </div>\n                          );\n                        })}\n                      </>\n                    )}\n                  </div>\n                </SwiperSlide>\n              );\n            })}\n          </Swiper>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}