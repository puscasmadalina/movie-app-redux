{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/seasons/EpisodesDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { fetchData, fetchDetails } from \"../../../utils/utils\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSeasonEpisode } from \"../../../slices/TvShowSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodesDetails = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id,\n    season_number,\n    episode_number\n  } = useParams();\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const result = await fetchDetails(`tv/${id}/season/${season_number}/episode/${episode_number}?language=en-US`);\n      dispatch(setSeasonEpisode(result));\n    }\n    fetchDataFunction();\n  }, [id, season_number, episode_number]);\n  const episodesDetails = useSelector(state => state.series.seasonEpisode.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: episodesDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/original${episodesDetails.still_path}`,\n        alt: episodesDetails.name,\n        className: \"w-[500px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-5\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: episodesDetails.air_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodesDetails, \"OCmFhLSm2w8/0lPQOAgNs7o0qco=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = EpisodesDetails;\nexport default EpisodesDetails;\nvar _c;\n$RefreshReg$(_c, \"EpisodesDetails\");","map":{"version":3,"names":["React","useEffect","fetchData","fetchDetails","useParams","useDispatch","useSelector","setSeasonEpisode","jsxDEV","_jsxDEV","EpisodesDetails","_s","dispatch","id","season_number","episode_number","fetchDataFunction","result","episodesDetails","state","series","seasonEpisode","data","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","still_path","alt","air_date","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/seasons/EpisodesDetails.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { fetchData, fetchDetails } from \"../../../utils/utils\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSeasonEpisode } from \"../../../slices/TvShowSlice\";\n\nconst EpisodesDetails = () => {\n  const dispatch = useDispatch();\n  const { id, season_number, episode_number } = useParams();\n\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const result = await fetchDetails(\n        `tv/${id}/season/${season_number}/episode/${episode_number}?language=en-US`\n      );\n\n      dispatch(setSeasonEpisode(result));\n    }\n\n    fetchDataFunction();\n  }, [id, season_number, episode_number]);\n\n  const episodesDetails = useSelector(\n    (state) => state.series.seasonEpisode.data\n  );\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <span>{episodesDetails.name}</span>\n      <div className=\"flex flex-row gap-5\">\n        <img\n          src={`https://image.tmdb.org/t/p/original${episodesDetails.still_path}`}\n          alt={episodesDetails.name}\n          className=\"w-[500px]\"\n        />\n        <div className=\"flex flex-col gap-5\">\n          <span>{episodesDetails.air_date}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EpisodesDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,YAAY,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,EAAE;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGX,SAAS,CAAC,CAAC;EAEzDH,SAAS,CAAC,MAAM;IACd,eAAee,iBAAiBA,CAAA,EAAG;MACjC,MAAMC,MAAM,GAAG,MAAMd,YAAY,CAC9B,MAAKU,EAAG,WAAUC,aAAc,YAAWC,cAAe,iBAC7D,CAAC;MAEDH,QAAQ,CAACL,gBAAgB,CAACU,MAAM,CAAC,CAAC;IACpC;IAEAD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,EAAE,EAAEC,aAAa,EAAEC,cAAc,CAAC,CAAC;EAEvC,MAAMG,eAAe,GAAGZ,WAAW,CAChCa,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,aAAa,CAACC,IACxC,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCf,OAAA;MAAAe,QAAA,EAAON,eAAe,CAACO;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnCpB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCf,OAAA;QACEqB,GAAG,EAAG,sCAAqCZ,eAAe,CAACa,UAAW,EAAE;QACxEC,GAAG,EAAEd,eAAe,CAACO,IAAK;QAC1BF,SAAS,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFpB,OAAA;QAAKc,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCf,OAAA;UAAAe,QAAA,EAAON,eAAe,CAACe;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,eAAe;EAAA,QACFL,WAAW,EACkBD,SAAS,EAc/BE,WAAW;AAAA;AAAA4B,EAAA,GAhB/BxB,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}