{"ast":null,"code":"import React,{useEffect}from\"react\";import{fetchDetails}from\"../../../utils/utils\";import{useParams}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{setSeasonEpisode}from\"../../../slices/TvShowSlice\";import DetailsComponent from\"../../(utils)/DetailsComponent\";import{Link}from\"react-router-dom\";import EpisodeCast from\"./EpisodeCast\";import SwiperComponent from\"../../(utils)/SwiperComponent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const EpisodesDetails=()=>{const dispatch=useDispatch();const{id,season_number,episode_number}=useParams();const episodePeople=useSelector(state=>state.series.episodeCast.data);useEffect(()=>{async function fetchDataFunction(){const result=await fetchDetails(\"tv/\".concat(id,\"/season/\").concat(season_number,\"/episode/\").concat(episode_number,\"?language=en-US\"));dispatch(setSeasonEpisode(result));}fetchDataFunction();},[id,season_number,episode_number,dispatch]);const episodesDetails=useSelector(state=>state.series.seasonEpisode.data);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-5 pl-10 pr-10\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/tvshow/\".concat(id,\"/season/\").concat(season_number),className:\" flex flex-row gap-2 items-center\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",id:\"Bold\",viewBox:\"0 0 24 24\",width:\"20\",height:\"20\",className:\"bg-yellow-500 p-1 rounded-xl\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4.943,5.606,1.024,9.525a3.585,3.585,0,0,0,0,4.95l3.919,3.919a1.5,1.5,0,1,0,2.121-2.121L4.285,13.492l18.25-.023a1.5,1.5,0,0,0,1.5-1.5v0a1.5,1.5,0,0,0-1.5-1.5L4.3,10.492,7.064,7.727A1.5,1.5,0,0,0,4.943,5.606Z\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"Back to Tv Season\"})]}),/*#__PURE__*/_jsx(DetailsComponent,{data:episodesDetails,episodeDetails:true}),/*#__PURE__*/_jsx(\"span\",{children:\"Top Cast\"}),/*#__PURE__*/_jsx(EpisodeCast,{}),/*#__PURE__*/_jsx(Link,{to:\"/tvshow/\".concat(id,\"/season/\").concat(season_number,\"/episode/\").concat(episode_number,\"/cast\"),children:/*#__PURE__*/_jsx(\"span\",{className:\"bg-gray-400 rounded-xl font-bold text-lg text-black p-1 \",children:\"See Full Cast\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"bg-yellow-500 font-bold text-black text-2xl p-1 rounded-xl\",children:\"Guests\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SwiperComponent,{data:episodePeople.guest_stars,episodeGuests:true})})]});};export default EpisodesDetails;","map":{"version":3,"names":["React","useEffect","fetchDetails","useParams","useDispatch","useSelector","setSeasonEpisode","DetailsComponent","Link","EpisodeCast","SwiperComponent","jsx","_jsx","jsxs","_jsxs","EpisodesDetails","dispatch","id","season_number","episode_number","episodePeople","state","series","episodeCast","data","fetchDataFunction","result","concat","episodesDetails","seasonEpisode","className","children","to","xmlns","viewBox","width","height","d","episodeDetails","guest_stars","episodeGuests"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/components/tvshow/seasons/EpisodesDetails.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { fetchDetails } from \"../../../utils/utils\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSeasonEpisode } from \"../../../slices/TvShowSlice\";\nimport DetailsComponent from \"../../(utils)/DetailsComponent\";\nimport { Link } from \"react-router-dom\";\nimport EpisodeCast from \"./EpisodeCast\";\nimport SwiperComponent from \"../../(utils)/SwiperComponent\";\n\nconst EpisodesDetails = () => {\n  const dispatch = useDispatch();\n  const { id, season_number, episode_number } = useParams();\n  const episodePeople = useSelector((state) => state.series.episodeCast.data);\n\n  useEffect(() => {\n    async function fetchDataFunction() {\n      const result = await fetchDetails(\n        `tv/${id}/season/${season_number}/episode/${episode_number}?language=en-US`\n      );\n\n      dispatch(setSeasonEpisode(result));\n    }\n\n    fetchDataFunction();\n  }, [id, season_number, episode_number, dispatch]);\n\n  const episodesDetails = useSelector(\n    (state) => state.series.seasonEpisode.data\n  );\n\n  return (\n    <div className=\"flex flex-col gap-5 pl-10 pr-10\">\n      <Link\n        to={`/tvshow/${id}/season/${season_number}`}\n        className=\" flex flex-row gap-2 items-center\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"Bold\"\n          viewBox=\"0 0 24 24\"\n          width=\"20\"\n          height=\"20\"\n          className=\"bg-yellow-500 p-1 rounded-xl\"\n        >\n          <path d=\"M4.943,5.606,1.024,9.525a3.585,3.585,0,0,0,0,4.95l3.919,3.919a1.5,1.5,0,1,0,2.121-2.121L4.285,13.492l18.25-.023a1.5,1.5,0,0,0,1.5-1.5v0a1.5,1.5,0,0,0-1.5-1.5L4.3,10.492,7.064,7.727A1.5,1.5,0,0,0,4.943,5.606Z\" />\n        </svg>\n        <span className=\"font-bold\">Back to Tv Season</span>\n      </Link>\n      <DetailsComponent data={episodesDetails} episodeDetails={true} />\n      <span>Top Cast</span>\n      <EpisodeCast />\n      <Link\n        to={`/tvshow/${id}/season/${season_number}/episode/${episode_number}/cast`}\n      >\n        <span className=\"bg-gray-400 rounded-xl font-bold text-lg text-black p-1 \">\n          See Full Cast\n        </span>\n      </Link>\n      <div>\n        <span className=\"bg-yellow-500 font-bold text-black text-2xl p-1 rounded-xl\">\n          Guests\n        </span>\n      </div>\n\n      <div>\n        <SwiperComponent\n          data={episodePeople.guest_stars}\n          episodeGuests={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EpisodesDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}