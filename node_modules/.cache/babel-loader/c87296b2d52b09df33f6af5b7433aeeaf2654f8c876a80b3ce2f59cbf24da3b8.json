{"ast":null,"code":"var _jsxFileName = \"/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/context/Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { fetchData } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalProvider = /*#__PURE__*/createContext();\nconst Context = ({\n  children\n}) => {\n  _s();\n  const [data, setData] = useState();\n  const [categories, setCategories] = useState();\n  const [actors, setActors] = useState();\n  useEffect(() => {\n    (async () => {\n      await fetchData('titles/utils/titleTypes').then(res => setCategories(res));\n      await fetchData('titles').then(res => setData(res));\n      await fetchData('actors').then(res => setActors(res));\n    })();\n    // url: 'https://moviesdatabase.p.rapidapi.com/titles/search/keyword/dune',\n    // https://rapidapi.com/SAdrian/api/moviesdatabase/\n    // https://www.themoviedb.org/\n    //https://www.imdb.com/?ref_=nv_home\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalProvider.Provider, {\n    value: {\n      appData: [data, setData]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Context, \"3kkpyoUXVZdLMOQkIeuMl+qC2uA=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","createContext","useState","useEffect","fetchData","jsxDEV","_jsxDEV","GlobalProvider","Context","children","_s","data","setData","categories","setCategories","actors","setActors","then","res","Provider","value","appData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/puscasmadalina/Documents/Movie App/movie-app-redux/src/context/Context.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { fetchData } from '../utils/utils';\r\n\r\nconst GlobalProvider = createContext();\r\n\r\nconst Context = ({ children }) => {\r\n  const [data, setData] = useState();\r\n  const [categories, setCategories] = useState();\r\n  const [actors, setActors] = useState()\r\n  useEffect(() => {\r\n    (async () => {\r\n      await fetchData('titles/utils/titleTypes').then(res => setCategories(res))\r\n      await fetchData('titles').then(res => setData(res))\r\n      await fetchData('actors').then(res => setActors(res))\r\n    })()\r\n    // url: 'https://moviesdatabase.p.rapidapi.com/titles/search/keyword/dune',\r\n    // https://rapidapi.com/SAdrian/api/moviesdatabase/\r\n    // https://www.themoviedb.org/\r\n    //https://www.imdb.com/?ref_=nv_home\r\n  }, [])\r\n\r\n  return (\r\n    <GlobalProvider.Provider value={{ appData: [data, setData] }}>\r\n      {children}\r\n    </GlobalProvider.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,MAAMO,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACtCC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMC,SAAS,CAAC,yBAAyB,CAAC,CAACa,IAAI,CAACC,GAAG,IAAIJ,aAAa,CAACI,GAAG,CAAC,CAAC;MAC1E,MAAMd,SAAS,CAAC,QAAQ,CAAC,CAACa,IAAI,CAACC,GAAG,IAAIN,OAAO,CAACM,GAAG,CAAC,CAAC;MACnD,MAAMd,SAAS,CAAC,QAAQ,CAAC,CAACa,IAAI,CAACC,GAAG,IAAIF,SAAS,CAACE,GAAG,CAAC,CAAC;IACvD,CAAC,EAAE,CAAC;IACJ;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,cAAc,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,CAACV,IAAI,EAAEC,OAAO;IAAE,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACf,EAAA,CArBIF,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}